// <auto-generated />
using System;
using FinalProjectFirstTest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProjectFirstTest.Migrations
{
    [DbContext(typeof(FinalProjectDbContext))]
    [Migration("20220428130826_add camping_area_picture json")]
    partial class addcamping_area_picturejson
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProjectFirstTest.Models.Camping_Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAudit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Camping_Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "新竹縣五峰鄉花園村6鄰121之5號",
                            Description = "大圓山露營區位於靠海的營位，有許多樹可以遮蔽陽光，右手邊則有搭建遮雨棚以及水泥屋和竹屋(位於水泥屋後方)，提供不同的住宿選擇，設備基本上也是以簡單為主。 往左邊望去就可以看到墾丁的知名景點之一的船帆石，最右邊便是鵝鑾鼻公園，晚上可以明顯看到鵝鑾鼻燈塔的燈光",
                            IsAudit = true,
                            Name = "大海露營區",
                            Phone = "0315-045-844",
                            Region = 5,
                            SellerId = 1,
                            UpdateTime = new DateTime(2022, 4, 13, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 2,
                            Address = "南投縣魚池鄉投69-3鄉道555號",
                            Description = "翠林農場海拔750多公尺，得天獨厚的天然環境，兩面環山，還有青翠的綠地、豐富有趣生態導覽，來露營的朋友還可以規劃螢火蟲導覽、野溪導覽，行程好豐富。",
                            IsAudit = true,
                            Name = "翠林農場",
                            Phone = "0945-140-341",
                            Region = 8,
                            SellerId = 1,
                            UpdateTime = new DateTime(2022, 4, 14, 11, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 3,
                            Address = "高雄市六龜區新發里和平路305-2號",
                            AuditDescription = "照片太模糊,敘述請在詳盡一些。",
                            Description = "位於高雄六龜的「陽光綠地水世界露營區」在一望無盡的山水自然環境中，遠離都市的塵囂紛擾在寧靜的大自然氣氛中，感受那最純粹的露營區風景！",
                            IsAudit = false,
                            Name = "六龜陽光綠地水世界露營區",
                            Phone = "0963-459-755",
                            Region = 12,
                            SellerId = 1,
                            UpdateTime = new DateTime(2022, 4, 17, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 4,
                            Address = "屏東縣萬巒鄉光明路42-10號",
                            Description = "夢露露營空間位於屏東萬巒鄉，鄰近萬金聖母聖堂，營區不僅可以自搭帳篷，還提供了免裝備服務，讓露營新手能輕鬆體驗露營，設有戲水池、沙坑、大草地讓孩子有很棒的活動空間，大人放鬆小孩放電，很適合親朋好友一同享樂。",
                            IsAudit = true,
                            Name = "夢露露營空間",
                            Phone = "0927-858-657",
                            Region = 13,
                            SellerId = 1,
                            UpdateTime = new DateTime(2022, 4, 23, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 5,
                            Address = "新竹縣尖石鄉梅花村9鄰242-6號",
                            Description = "起初休閒露營區開箱體驗！位在新竹尖石深山林間，營區內還有茂密的杉木林，漫步於林間的步道享受芬多精和蓊鬱美景，山坡邊的營地更能 180 度遠眺層巒疊嶂，值得前往紮營體驗。",
                            IsAudit = true,
                            Name = "起初休閒露營區",
                            Phone = "0965-312-713",
                            Region = 4,
                            SellerId = 1,
                            UpdateTime = new DateTime(2022, 4, 15, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 6,
                            Address = "No.305-1號,五峰鄉新竹縣311",
                            Description = "四季露營區右邊是白蘭部落，全台最高的樂山基地及雪霸國家公園; 面向中央山脈遠眺雪山北峰等三千公尺以上百岳，正下方是清泉風景區",
                            IsAudit = true,
                            Name = "四季露營區",
                            Phone = "0945-112-340",
                            Region = 4,
                            SellerId = 2,
                            UpdateTime = new DateTime(2022, 4, 12, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 7,
                            Address = "311新竹縣五峰鄉和平部落",
                            AuditDescription = "照片不清楚，露營區搭建好才能通過。",
                            Description = "駛入蜿蜒的鄉間小徑，遠離塵囂與感受寧靜的自然美景。 森林步道感受杉林芬多精的滋潤、蟲鳴鳥叫的交響樂，體驗山林的奇妙旅程。",
                            IsAudit = false,
                            Name = "戈巴侖森林露營區",
                            Phone = "0975-595-131",
                            Region = 4,
                            SellerId = 2,
                            UpdateTime = new DateTime(2022, 4, 16, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 8,
                            Address = "365苗栗縣泰安鄉泰安士林國小後依天晴指標走",
                            Description = "位於苗栗泰安山上的天晴野舍，是一處具有特色的露營區，整個營地座落的位置寧靜、舒適，且面向大安溪遼闊景緻，坐在營位上可以感受放空的心境。 若有機會可以遇見太陽霞光、琉璃光、雲海等漂亮景色。",
                            IsAudit = true,
                            Name = "山晴野舍",
                            Phone = "0923-345-123",
                            Region = 5,
                            SellerId = 2,
                            UpdateTime = new DateTime(2022, 4, 20, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 9,
                            Address = "南投縣埔里鎮福長路260號",
                            Description = "位於南投縣埔里鎮，周邊即是福興溫泉，更是在能高瀑布的下方，絕佳的地理位置讓您充分感受到大自然最純粹的洗禮，無光害的環境在入夜後便可望見點點繁星佈滿天際，璀璨浪漫的景緻總令人心醉，而夏季時光亦可看見成群的螢火蟲在草叢間嬉戲。",
                            IsAudit = true,
                            Name = "山野星空親子露營區",
                            Phone = "0968-605-609",
                            Region = 8,
                            SellerId = 2,
                            UpdateTime = new DateTime(2022, 4, 21, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 10,
                            Address = "新北市平溪區靜安路三段391號-7",
                            Description = "是個適合親子露營、親近大自然的好地方。近市郊卻能遠離塵囂，可以靜靜聆聽潺潺的流水聲，亦可呼吸森林的清新。給孩子們一個最自然的玩耍空間，也給自己一個最放鬆的休息地方。",
                            IsAudit = true,
                            Name = "十分自然露營區",
                            Phone = "0936-175-763",
                            Region = 1,
                            SellerId = 2,
                            UpdateTime = new DateTime(2022, 4, 22, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 11,
                            Address = "桃園市復興區高義里7鄰色霧鬧10-16號",
                            Description = "松野農園露營區每到5、6月份繡球花季，營地有漂亮的繡球花可以觀賞，白天雲海雲瀑，夜晚微風陣陣看著絕美夜景是件多浪漫的事。",
                            IsAudit = true,
                            Name = "松野農園露營區",
                            Phone = "0963-123-251",
                            Region = 3,
                            SellerId = 2,
                            UpdateTime = new DateTime(2022, 4, 24, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 12,
                            Address = "桃園市復興區奎輝里嘎色鬧7鄰2號",
                            AuditDescription = "房間資訊不完整，照片請多加。",
                            Description = "嘎色鬧意指「最角落的地方」，是神給遷徙時的泰雅族人恩典之地,如「蜻蜓」逐水繁延其後代佇築於此，與大地共存。 兩年前的一場風雨摧不斷族人堅守家園與攜手重建的心，「蜻蜓營區」就是營主一家用雙手見證他們堅守家園再造神所賜的新天新地。",
                            IsAudit = false,
                            Name = "蜻蜓露營區-嘎色鬧",
                            Phone = "0939-523-829",
                            Region = 3,
                            SellerId = 3,
                            UpdateTime = new DateTime(2022, 4, 25, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 13,
                            Address = "桃園市復興區義盛里6鄰62號和平橋後左轉約400公尺處",
                            Description = "位於小烏來風景區，以森林和瀑布為景點的義盛部落，隱身於部落裡的宇內溪谷旁，木河谷，二十年櫸樹，五十年老田，心靈沉靜的小溪谷，​歡迎您親自蒞臨感受。",
                            IsAudit = true,
                            Name = "木河谷",
                            Phone = "0925-312-956",
                            Region = 3,
                            SellerId = 3,
                            UpdateTime = new DateTime(2022, 4, 14, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 14,
                            Address = "桃園市復興區12號1",
                            Description = "露營區草地大約是500坪的空間, 整個園區大概是1500坪空間, 區內大樹林立, 四面青山環繞, 優美僻靜, 後臨北勢溪可以戲水玩樂, 園內景觀視野遼闊, 適合三五好友群聚, 享受悠閒、寧靜的露營時光。",
                            IsAudit = true,
                            Name = "山豬王露營區",
                            Phone = "0915-012-889",
                            Region = 3,
                            SellerId = 3,
                            UpdateTime = new DateTime(2022, 4, 15, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 15,
                            Address = "新竹縣五峰鄉茅圃產業道路",
                            Description = "【巴棍杉林】擁有超美獨特山陵線環繞、雲海 堪稱白蘭之最的景色，秋冬雲海旺季可賞大景、營區的草皮柔軟、營區廣闊 原生大樹遮陰 適合新手露友、三代同行！",
                            IsAudit = true,
                            Name = "巴棍杉林",
                            Phone = "0910-170-544",
                            Region = 4,
                            SellerId = 4,
                            UpdateTime = new DateTime(2022, 4, 17, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 16,
                            Address = "屏東縣恆春鎮鵝鑾里船帆路999-1號",
                            Description = "沒有華麗人工美，而執意走自己步調自然風，四面環山，好似被山林擁抱著的幸福，享受大自然，小而美歡迎光臨大東田",
                            IsAudit = true,
                            Name = "大東田露營區",
                            Phone = "0921-612-597",
                            Region = 13,
                            SellerId = 4,
                            UpdateTime = new DateTime(2022, 4, 19, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 17,
                            Address = "苗栗縣泰安鄉大興村５鄰47之6號",
                            Description = "游老闆的經營理念：親切服務，不超收！在這裡大家都是遊牧民族，我們為露客打造露營該有的環境；帳貼帳、夜市情景不在這裡。",
                            IsAudit = true,
                            Name = "遊牧民族露營區",
                            Phone = "0912-850-330",
                            Region = 5,
                            SellerId = 4,
                            UpdateTime = new DateTime(2022, 4, 20, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 18,
                            Address = "高雄市六龜區(台20線71K處)",
                            Description = "南橫2071農場，位於荖濃往甲仙南橫公路直瀨溪旁，群山環繞，氣候宜人，空氣清新，環境清幽，最適合整天忙錄於工作與想遠離塵囂及愛好露營活動朋友的最佳場地。",
                            IsAudit = true,
                            Name = "戀戀南橫2071露營區",
                            Phone = "0912-693-503",
                            Region = 12,
                            SellerId = 5,
                            UpdateTime = new DateTime(2022, 4, 21, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 19,
                            Address = "宜蘭縣冬山鄉小埤五路331號",
                            Description = "希望之丘休閒農場，可以採果和體驗療育香草及花卉帶來的放鬆心靈，也可以嘗試農業體驗及生態之旅，來感受大自然裡的生態與奧妙。還可以露營、夜間觀星及享受宜蘭在地的美食饗宴。",
                            IsAudit = true,
                            Name = "希望之丘露營區",
                            Phone = "0965-257-713",
                            Region = 14,
                            SellerId = 5,
                            UpdateTime = new DateTime(2022, 4, 23, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 20,
                            Address = "宜蘭縣大同鄉泰雅路二段92巷99-1號",
                            Description = "關於營區【營業時間】進場時間：當日上午10：00以後/退場時間：次日中午12：00以前預訂(星期五)二天一夜露營，請於星期六上午11:00前離場，以提供星期六訂位者使用，造成不便敬請見諒。 連續假日營地紮營時間為下午1點至隔日中午12點，以供下位紮營者使用。 週五(或前一晚) 提前進場 (限隔日續住者) 18:00~22:00 可入營，酌收每帳500元(現場收費) ，18:00前到場，以整日收費計算，請於23:00前搭營完成，避免打擾已就寢露友。請於露營日2天前電話聯絡0922-157971營主確認是否有營位。連續假日期間、星期六晚上不提供夜衝服務",
                            IsAudit = true,
                            Name = "沐野露營區",
                            Phone = "0922-157-971",
                            Region = 14,
                            SellerId = 5,
                            UpdateTime = new DateTime(2022, 4, 24, 23, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        });
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Camping_Area_Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Camping_AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Camping_AreaId");

                    b.ToTable("Camping_Area_Pictures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Camping_AreaId = 1,
                            Path = "campingarea1.jpg",
                            UpdateTime = new DateTime(2022, 4, 13, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 2,
                            Camping_AreaId = 1,
                            Path = "campingarea2.jpg",
                            UpdateTime = new DateTime(2022, 4, 14, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 3,
                            Camping_AreaId = 1,
                            Path = "campingarea3.jpg",
                            UpdateTime = new DateTime(2022, 4, 15, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 4,
                            Camping_AreaId = 1,
                            Path = "campingarea4.jpg",
                            UpdateTime = new DateTime(2022, 4, 18, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 5,
                            Camping_AreaId = 1,
                            Path = "campingarea39.jpg",
                            UpdateTime = new DateTime(2022, 4, 18, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 6,
                            Camping_AreaId = 2,
                            Path = "campingarea5.jpg",
                            UpdateTime = new DateTime(2022, 4, 19, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 7,
                            Camping_AreaId = 2,
                            Path = "campingarea6.jpg",
                            UpdateTime = new DateTime(2022, 4, 19, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 8,
                            Camping_AreaId = 2,
                            Path = "campingarea7.jpg",
                            UpdateTime = new DateTime(2022, 4, 20, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 9,
                            Camping_AreaId = 3,
                            Path = "campingarea15.jpg",
                            UpdateTime = new DateTime(2022, 4, 15, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 10,
                            Camping_AreaId = 3,
                            Path = "campingarea16.jpg",
                            UpdateTime = new DateTime(2022, 4, 15, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 11,
                            Camping_AreaId = 3,
                            Path = "campingarea18.jpg",
                            UpdateTime = new DateTime(2022, 4, 18, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 12,
                            Camping_AreaId = 4,
                            Path = "campingarea48.jpg",
                            UpdateTime = new DateTime(2022, 4, 20, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 13,
                            Camping_AreaId = 4,
                            Path = "campingarea49.jpg",
                            UpdateTime = new DateTime(2022, 4, 21, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 14,
                            Camping_AreaId = 4,
                            Path = "campingarea50.jpg",
                            UpdateTime = new DateTime(2022, 4, 22, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 15,
                            Camping_AreaId = 5,
                            Path = "campingarea31.jpg",
                            UpdateTime = new DateTime(2022, 4, 18, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 16,
                            Camping_AreaId = 5,
                            Path = "campingarea32.jpg",
                            UpdateTime = new DateTime(2022, 4, 19, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 17,
                            Camping_AreaId = 5,
                            Path = "campingarea35.jpg",
                            UpdateTime = new DateTime(2022, 4, 19, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 18,
                            Camping_AreaId = 6,
                            Path = "campingarea43.jpg",
                            UpdateTime = new DateTime(2022, 4, 20, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 19,
                            Camping_AreaId = 6,
                            Path = "campingarea44.jpg",
                            UpdateTime = new DateTime(2022, 4, 21, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 20,
                            Camping_AreaId = 6,
                            Path = "campingarea6.jpg",
                            UpdateTime = new DateTime(2022, 4, 22, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 21,
                            Camping_AreaId = 6,
                            Path = "campingarea15.jpg",
                            UpdateTime = new DateTime(2022, 4, 22, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 22,
                            Camping_AreaId = 6,
                            Path = "campingarea23.jpg",
                            UpdateTime = new DateTime(2022, 4, 23, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 23,
                            Camping_AreaId = 7,
                            Path = "campingarea42.jpg",
                            UpdateTime = new DateTime(2022, 4, 18, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 24,
                            Camping_AreaId = 7,
                            Path = "campingarea46.jpg",
                            UpdateTime = new DateTime(2022, 4, 19, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 25,
                            Camping_AreaId = 7,
                            Path = "campingarea47.jpg",
                            UpdateTime = new DateTime(2022, 4, 19, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 26,
                            Camping_AreaId = 8,
                            Path = "campingarea32.jpg",
                            UpdateTime = new DateTime(2022, 4, 20, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 27,
                            Camping_AreaId = 8,
                            Path = "campingarea33.jpg",
                            UpdateTime = new DateTime(2022, 4, 21, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 28,
                            Camping_AreaId = 8,
                            Path = "campingarea34.jpg",
                            UpdateTime = new DateTime(2022, 4, 22, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 29,
                            Camping_AreaId = 9,
                            Path = "campingarea12.jpg",
                            UpdateTime = new DateTime(2022, 4, 23, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 30,
                            Camping_AreaId = 9,
                            Path = "campingarea13.jpg",
                            UpdateTime = new DateTime(2022, 4, 23, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 31,
                            Camping_AreaId = 9,
                            Path = "campingarea21.jpg",
                            UpdateTime = new DateTime(2022, 4, 24, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 32,
                            Camping_AreaId = 10,
                            Path = "campingarea32.jpg",
                            UpdateTime = new DateTime(2022, 4, 25, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 33,
                            Camping_AreaId = 10,
                            Path = "campingarea38.jpg",
                            UpdateTime = new DateTime(2022, 4, 25, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 34,
                            Camping_AreaId = 10,
                            Path = "campingarea39.jpg",
                            UpdateTime = new DateTime(2022, 4, 26, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 35,
                            Camping_AreaId = 11,
                            Path = "campingarea11.jpg",
                            UpdateTime = new DateTime(2022, 4, 16, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 36,
                            Camping_AreaId = 11,
                            Path = "campingarea13.jpg",
                            UpdateTime = new DateTime(2022, 4, 17, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        },
                        new
                        {
                            Id = 37,
                            Camping_AreaId = 11,
                            Path = "campingarea28.jpg",
                            UpdateTime = new DateTime(2022, 4, 18, 8, 14, 33, 862, DateTimeKind.Unspecified).AddTicks(673)
                        });
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefundDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Camping_AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price_Of_Weekdays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price_Of_Weekends")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Camping_AreaId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Room_Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Room_Pictures");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMailConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Breakfast")
                        .HasColumnType("bit");

                    b.Property<int>("Camping_AreaId")
                        .HasColumnType("int");

                    b.Property<bool>("Canopy")
                        .HasColumnType("bit");

                    b.Property<bool>("Canteen")
                        .HasColumnType("bit");

                    b.Property<bool>("Dinner")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("bit");

                    b.Property<bool>("Kitchen_Utensils")
                        .HasColumnType("bit");

                    b.Property<bool>("Lunch")
                        .HasColumnType("bit");

                    b.Property<bool>("Mattress")
                        .HasColumnType("bit");

                    b.Property<bool>("Night_Lighting")
                        .HasColumnType("bit");

                    b.Property<bool>("No_Equipment")
                        .HasColumnType("bit");

                    b.Property<bool>("Outdoor_Tables_Chairs")
                        .HasColumnType("bit");

                    b.Property<bool>("Power_Supply")
                        .HasColumnType("bit");

                    b.Property<bool>("Public_Refrigerator")
                        .HasColumnType("bit");

                    b.Property<bool>("Tent_Equipment")
                        .HasColumnType("bit");

                    b.Property<bool>("Wifi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Camping_AreaId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMailConfirm")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Camping_Area", b =>
                {
                    b.HasOne("FinalProjectFirstTest.Models.Seller", "Seller")
                        .WithMany("Camping_Areas")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Camping_Area_Picture", b =>
                {
                    b.HasOne("FinalProjectFirstTest.Models.Camping_Area", "Camping_Area")
                        .WithMany("Camping_Area_Pictures")
                        .HasForeignKey("Camping_AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camping_Area");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.OrderDetail", b =>
                {
                    b.HasOne("FinalProjectFirstTest.Models.Room", "Room")
                        .WithMany("OrderDetails")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProjectFirstTest.Models.User", "User")
                        .WithMany("OrderDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Room", b =>
                {
                    b.HasOne("FinalProjectFirstTest.Models.Camping_Area", "Camping_Area")
                        .WithMany("Rooms")
                        .HasForeignKey("Camping_AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camping_Area");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Room_Picture", b =>
                {
                    b.HasOne("FinalProjectFirstTest.Models.Room", "Room")
                        .WithMany("Room_Pictures")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Service", b =>
                {
                    b.HasOne("FinalProjectFirstTest.Models.Camping_Area", "Camping_Area")
                        .WithMany("Services")
                        .HasForeignKey("Camping_AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camping_Area");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Camping_Area", b =>
                {
                    b.Navigation("Camping_Area_Pictures");

                    b.Navigation("Rooms");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Room", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Room_Pictures");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.Seller", b =>
                {
                    b.Navigation("Camping_Areas");
                });

            modelBuilder.Entity("FinalProjectFirstTest.Models.User", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
